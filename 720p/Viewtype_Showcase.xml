<includes>

	<include name="ShowcaseVisible">
		<visible>Control.IsVisible(57)</visible>
	</include>

	<include name="ShowcaseMovieGroupVars">
		<posx>-83</posx>
		<posy>380</posy>
		<width>1446</width>
		<height>350</height>			
	</include>
	
	<include name="MusicShowcaseGroupVars">
		<posx>-245</posx>
		<posy>387</posy>
		<width>1770</width>
		<height>350</height>			
	</include>
	
<!-- Movie Showcase Variables: Main thumbs -->
	<include name="ShowcaseMovieThumbDimensions">
		<posx>49</posx>
		<posy>8</posy>
		<width>173</width>
		<height>254</height>
	</include>
	<include name="ShowcaseMovieThumbReflectionDimensions">
		<posx>49</posx>
		<posy>260</posy>
		<width>173</width>
		<height>254</height>
	</include>

	<include name="ShowcaseMovieThumb">
		<include>ShowcaseMovieThumbDimensions</include>
		<align>center</align>
		<texture background="true" diffuse="thumbs/movieposter_mask.png">defaultvideobigposter.png</texture>
		<aspectratio scalediffuse="false">stretch</aspectratio>
		<visible>!Container.Content(genres)</visible>
	</include>
	<include name="ShowcaseGenreDefaultThumb">
		<include>ShowcaseMovieThumbDimensions</include>
		<texture background="true" diffuse="thumbs/movieposter_mask.png">special://skin/media/moviegenre/default.jpg</texture>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<visible>Container.Content(genres)</visible>
	</include>

	<include name="ShowcaseMovieThumbReflection">
		<include>ShowcaseMovieThumbReflectionDimensions</include>
		<colordiffuse>d0FFFFFF</colordiffuse>
		<texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png">defaultvideobigposter.png</texture>
		<aspectratio scalediffuse="false">stretch</aspectratio>
		<animation effect="fade" start="70" end="70" time="0" condition="Skin.HasSetting(darkshowcase)">Conditional</animation>
		<visible>!Container.Content(genres)</visible>			
	</include>
	
	<include name="ShowcaseMoviesGenreThumb">
		<include>ShowcaseMovieThumbDimensions</include>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<visible>Container.Content(genres)</visible>
	</include>
	<include name="ShowcaseMoviesGenreThumbReflection">
		<include>ShowcaseMovieThumbReflectionDimensions</include>
		<colordiffuse>d0FFFFFF</colordiffuse>
		<aspectratio scalediffuse="false">stretch</aspectratio>
		<visible>Container.Content(genres)</visible>
	</include>

<!-- Movie Showcase Variables: Thumb glass overlays -->

	<include name="ShowcaseMovieGlassOverlay">
		<include>ShowcaseMovieThumbDimensions</include>
		<bordertexture border="-17">thumbs/poster_shadow.png</bordertexture>
		<texture>thumbs/poster_glass.png</texture>
	</include>
	
	<include name="ShowcaseMovieGlassOverlayAngled">
		<include>ShowcaseMovieThumbDimensions</include>
		<bordertexture border="-17">thumbs/poster_shadow.png</bordertexture>
		<texture>thumbs/poster_glass_noedge.png</texture>
	</include>


<!-- Music Showcase Variables: Main thumbs -->
	<include name="MusicShowcaseThumbDimensions">
		<posx>18</posx>
		<posy>18</posy>
		<width>234</width>
		<height>234</height>
	</include>
	<include name="MusicShowcaseThumbReflectionDimensions">
		<posx>18</posx>
		<posy>252</posy>
		<width>234</width>
		<height>234</height>
	</include>
	
	<include name="MusicShowcaseThumbKeep">
		<aspectratio scalediffuse="false">keep</aspectratio>	
	</include>
	<include name="MusicShowcaseThumbStretch">
		<aspectratio scalediffuse="false">stretch</aspectratio>	
	</include>	

	<include name="MusicShowcaseThumb">
		<include>MusicShowcaseThumbDimensions</include>
		<texture background="true" diffuse="thumbs/cdcover_mask.png">defaultaudio.png</texture>
		<include condition="Window.IsActive(2)">MusicShowcaseThumbKeep</include>
		<include condition="!Window.IsActive(2)">MusicShowcaseThumbStretch</include>	
		<visible>!Container.Content(genres)</visible>	
	</include>
	<include name="MusicShowcaseThumbReflection">
		<include>MusicShowcaseThumbReflectionDimensions</include>
		<colordiffuse>d0FFFFFF</colordiffuse>
		<texture background="true" flipy="true" diffuse="thumbs/cdcover_mask_reflect.png">defaultaudio.png</texture>
		<include condition="Window.IsActive(2)">MusicShowcaseThumbKeep</include>
		<include condition="!Window.IsActive(2)">MusicShowcaseThumbStretch</include>	
		<animation effect="fade" start="50" end="50" time="0" condition="Skin.HasSetting(darkshowcase)">Conditional</animation>	
		<visible>!Container.Content(genres)</visible>	
	</include>
	<include name="ShowcaseMusicGenreThumb">
		<include>MusicShowcaseThumbDimensions</include>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<visible>Container.Content(genres)</visible>
	</include>
	<include name="ShowcaseMusicsGenreThumbReflection">
		<include>MusicShowcaseThumbReflectionDimensions</include>
		<colordiffuse>d0FFFFFF</colordiffuse>
		<aspectratio scalediffuse="false">stretch</aspectratio>
		<visible>Container.Content(genres)</visible>
	</include>
	<include name="MusicShowcaseBlack">
		<control type="image">
			<include>MusicShowcaseThumbDimensions</include>
			<texture diffuse="thumbs/cdcover_mask.png">common/black.png</texture>
		</control>
	</include>
	<include name="MusicShowcaseBlackReflection">
		<control type="image">
			<include>MusicShowcaseThumbReflectionDimensions</include>
			<colordiffuse>d0FFFFFF</colordiffuse>
			<texture flipy="true" diffuse="thumbs/cdcover_mask_reflect.png">common/black.png</texture>
			<animation effect="fade" start="50" end="50" time="0" condition="Skin.HasSetting(darkshowcase)">Conditional</animation>	
		</control>
	</include>	
	

<!-- Music Showcase Variables: Thumb glass overlays -->
	<include name="MusicShowcaseGlassOverlayAngled">
		<include>MusicShowcaseThumbDimensions</include>
		<bordertexture border="-19">thumbs/cd_shadow_light.png</bordertexture>
		<texture>thumbs/cd_glass_noedge.png</texture>
	</include>
	<include name="MusicShowcaseGlassOverlayMain">
		<include>MusicShowcaseThumbDimensions</include>
		<bordertexture border="-19">thumbs/cd_shadow_light.png</bordertexture>
		<texture>thumbs/cd_glass.png</texture>
	</include>
	<include name="MusicShowcaseGlassOverlay">
		<include>MusicShowcaseThumbDimensions</include>
		<bordertexture border="-19">thumbs/cd_shadow_light.png</bordertexture>
		<texture>thumbs/cd_glass.png</texture>
	</include>

<!-- Music Flow Variables: Icon labels -->
	<include name="MusicShowcaseOverlay">
		<include>MusicShowcaseThumbDimensions</include>
		<colordiffuse>4e000000</colordiffuse>
		<texture>-</texture>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<visible>![Control.HasFocus(57) | Control.HasFocus(71) | Control.HasFocus(85)]</visible>
		<include>Animation_CommonFade</include>
	</include>
	<include name="ShowcaseMovieOverlay">
		<include>ShowcaseMovieThumbDimensions</include>
		<colordiffuse>4e000000</colordiffuse>
		<texture>-</texture>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<animation effect="fade" end="100" time="200" condition="ControlGroup(7000).HasFocus">Conditional</animation>
		<animation effect="fade" start="0" end="0" time="0">WindowOpen</animation>
	</include>

<!-- Common Flow labels -->
	<include name="ShowcaseLabelVars">
		<align>center</align>
		<aligny>center</aligny>
		<include>Animation_CommonFade</include>
		<include>Animation_HideShowcase</include>
		<visible>![Control.HasFocus(60) | Control.HasFocus(94)]</visible>
	</include>
	<include name="ShowcaseMainLabel">
		<include>ShowcaseLabelVars</include>
		<posx>415</posx>
		<posy>693</posy>
		<width>450</width>
		<font>Font_ShowcaseMainLabel</font>
		<include condition="!Skin.HasSetting(darkshowcase)">Colour_ShowcaseLabelLightShade</include>
		<include condition="Skin.HasSetting(darkshowcase)">Colour_ShowcaseLabelNightShade</include>
		<visible>!ControlGroup(7000).HasFocus()</visible>		
	</include>
	
	<include name="ShowcaseMainLabelWide">
		<include>ShowcaseLabelVars</include>
		<posx>200</posx>
		<posy>693</posy>
		<width>880</width>
		<font>Font_ShowcaseMainLabel</font>
		<include condition="!Skin.HasSetting(darkshowcase)">Colour_ShowcaseLabelLightShade</include>
		<include condition="Skin.HasSetting(darkshowcase)">Colour_ShowcaseLabelNightShade</include>		
		<visible>!ControlGroup(7000).HasFocus()</visible>
	</include>

	<include name="ShowcaseItemsLabel">
		<include>ShowcaseLabelVars</include>
		<posx>340</posx>
		<posy>685</posy>
		<width>600</width>
		<font>Font_ShowcaseMainLabel</font>
		<include condition="!Skin.HasSetting(darkshowcase)">Colour_ShowcaseLabelLightShade</include>
		<include condition="Skin.HasSetting(darkshowcase)">Colour_ShowcaseLabelNightShade</include>
		<visible>ControlGroup(7000).HasFocus()</visible>		
	</include>	
	
	<include name="ShowcaseDetailLabel">
		<include>ShowcaseLabelVars</include>
		<posx>340</posx>
		<posy>673</posy>
		<width>600</width>
		<font>Font_ShowcaseDetailLabel</font>
		<visible>!ControlGroup(7000).HasFocus()</visible>		
		<include condition="!Skin.HasSetting(darkshowcase)">Colour_ShowcaseLabelLightShade</include>
		<include condition="Skin.HasSetting(darkshowcase)">Colour_ShowcaseLabelNightShade</include>
	</include>

	<include name="ShowcaseSquare">
		<control type="group" id="7001">
			<posy>387</posy>
			<camera x="640" y="540" />
			<visible>Control.IsVisible(57) + Container.OnNext + ![Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]</visible>
			<animation effect="slide" end="-100,0" time="250" reversible="false">Hidden</animation>
			<control type="group">
				<posx>50</posx>
				<visible>Container.OnNext</visible>
				<animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
				<animation effect="rotatey" center="-50" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-6).Thumb</info>
					</control>
					<include>genre_Showcase_-6</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>					
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-6).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-6</include>
				</control>
			</control>
			<control type="group">
				<posx>150</posx>
				<animation effect="rotatey" center="50" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-5).Thumb</info>
					</control>
					<include>genre_Showcase_-5</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-5).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-5</include>
				</control>
			</control>
			<control type="group">
				<posx>250</posx>
				<animation effect="rotatey" center="150" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-4).Thumb</info>
					</control>
					<include>genre_Showcase_-4</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-4).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-4</include>
				</control>
			</control>
			<control type="group">
				<posx>350</posx>
				<animation effect="rotatey" center="250" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-3).Thumb</info>
					</control>
					<include>genre_Showcase_-3</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-3).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-3</include>
				</control>
			</control>
			<control type="group">
				<posx>450</posx>
				<animation effect="rotatey" center="350" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-2).Thumb</info>
					</control>
					<include>genre_Showcase_-2</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-2).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-2</include>
				</control>
			</control>
			<control type="group">
				<posx>1060</posx>
				<visible>!Container.OnNext</visible>
				<animation effect="fade" start="0" end="100" delay="0" time="250" reversible="false">Visible</animation>
				<animation effect="rotatey" center="1430" start="65" end="65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(5).Thumb</info>
					</control>
					<include>genre_Showcase_5</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(5).Thumb</info>
					</control>
					<include>genre_Showcase_ref_5</include>
				</control>
			</control>
			<control type="group">
				<posx>960</posx>
				<animation effect="rotatey" center="1330" start="65" end="65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(4).Thumb</info>
					</control>
					<include>genre_Showcase_4</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(4).Thumb</info>
					</control>
					<include>genre_Showcase_ref_4</include>
				</control>
			</control>
			<control type="group">
				<posx>860</posx>
				<animation effect="rotatey" center="1230" start="65" end="65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(3).Thumb</info>
					</control>
					<include>genre_Showcase_3</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(3).Thumb</info>
					</control>
					<include>genre_Showcase_ref_3</include>
				</control>
			</control>
			<control type="group">
				<posx>760</posx>
				<animation effect="rotatey" center="1130" start="65" end="65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(2).Thumb</info>
					</control>
					<include>genre_Showcase_2</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(2).Thumb</info>
					</control>
					<include>genre_Showcase_ref_2</include>
				</control>
			</control>
			<control type="group">
				<posx>660</posx>
				<animation effect="rotatey" center="1030" start="65" end="65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(1).Thumb</info>
					</control>
					<include>genre_Showcase_1</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(1).Thumb</info>
					</control>
					<include>genre_Showcase_ref_1</include>
				</control>
			</control>
			<control type="group">
				<visible>Container.OnNext</visible>
				<animation effect="slide" end="45,0" time="250" reversible="false">Hidden</animation>
				<control type="group">
					<posx>560</posx>
					<visible>Container.OnNext</visible>
					<animation effect="rotatey" center="930" start="0" end="-65" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
					<animation effect="rotatey" center="930" start="65" end="65" time="0" condition="true">Conditional</animation>
					<control type="group">
						<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>					
						<control type="image">
							<include>MusicShowcaseThumb</include>
							<info>Container(57).ListItem(0).Thumb</info>
						</control>
						<include>genre_Showcase_0</include>
						<control type="image">
							<description>Glass overlay</description>
							<include>MusicShowcaseGlassOverlayAngled</include>
						</control>
						<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>							
						<control type="image">
							<include>MusicShowcaseThumbReflection</include>
							<info>Container(57).ListItem(0).Thumb</info>
						</control>
						<include>genre_Showcase_ref_0</include>
					</control>
				</control>
				<control type="group">
					<posx>505</posx>
					<visible>Container.OnNext</visible>
					<animation effect="rotatey" center="405" start="0" end="-65" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
					<control type="group">
						<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>					
						<control type="image">
							<include>MusicShowcaseThumb</include>
							<info>Container(57).ListItem(-1).Thumb</info>
						</control>
						<include>genre_Showcase_-1</include>
						<control type="image">
							<description>Glass overlay</description>
							<include>MusicShowcaseGlassOverlayAngled</include>
						</control>
						<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>							
						<control type="image">
							<include>MusicShowcaseThumbReflection</include>
							<info>Container(57).ListItem(-1).Thumb</info>
						</control>
						<include>genre_Showcase_ref_-1</include>
					</control>
				</control>
			</control>
		</control>
		<control type="group" id="7002">
			<posy>387</posy>
			<camera x="640" y="540" />
			<visible>Control.IsVisible(57) + Container.OnPrevious + ![Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]</visible>
			<animation effect="slide" end="100,0" time="250" reversible="false">Hidden</animation>
			<control type="group">
				<posx>960</posx>
				<visible>Container.OnPrevious</visible>
				<animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
				<animation effect="rotatey" center="1330" start="65" end="65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(6).Thumb</info>
					</control>
					<include>genre_Showcase_6</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(6).Thumb</info>
					</control>
					<include>genre_Showcase_ref_6</include>
				</control>
			</control>
			<control type="group">
				<posx>860</posx>
				<animation effect="rotatey" center="1230" start="65" end="65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(5).Thumb</info>
					</control>
					<include>genre_Showcase_5</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(5).Thumb</info>
					</control>
					<include>genre_Showcase_ref_5</include>
				</control>
			</control>
			<control type="group">
				<posx>760</posx>
				<animation effect="rotatey" center="1130" start="65" end="65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(4).Thumb</info>
					</control>
					<include>genre_Showcase_4</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(4).Thumb</info>
					</control>
					<include>genre_Showcase_ref_4</include>
				</control>
			</control>
			<control type="group">
				<posx>660</posx>
				<animation effect="rotatey" center="1030" start="65" end="65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(3).Thumb</info>
					</control>
					<include>genre_Showcase_3</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(3).Thumb</info>
					</control>
					<include>genre_Showcase_ref_3</include>
				</control>
			</control>
			<control type="group">
				<posx>560</posx>
				<animation effect="rotatey" center="930" start="65" end="65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(2).Thumb</info>
					</control>
					<include>genre_Showcase_2</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(2).Thumb</info>
					</control>
					<include>genre_Showcase_ref_2</include>
				</control>
			</control>
			<control type="group">
				<posx>-50</posx>
				<visible>!Container.OnPrevious</visible>
				<animation effect="fade" start="0" end="100" time="250" reversible="false">Visible</animation>
				<animation effect="rotatey" center="-150" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-5).Thumb</info>
					</control>
					<include>genre_Showcase_-5</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-5).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-5</include>
				</control>
			</control>
			<control type="group">
				<posx>50</posx>
				<animation effect="rotatey" center="-50" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-4).Thumb</info>
					</control>
					<include>genre_Showcase_-4</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-4).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-4</include>
				</control>
			</control>
			<control type="group">
				<posx>150</posx>
				<animation effect="rotatey" center="50" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-3).Thumb</info>
					</control>
					<include>genre_Showcase_-3</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-3).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-3</include>
				</control>
			</control>
			<control type="group">
				<posx>250</posx>
				<animation effect="rotatey" center="150" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-2).Thumb</info>
					</control>
					<include>genre_Showcase_-2</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-2).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-2</include>
				</control>
			</control>
			<control type="group">
				<posx>350</posx>
				<animation effect="rotatey" center="250" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-1).Thumb</info>
					</control>
					<include>genre_Showcase_-1</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-1).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-1</include>
				</control>
			</control>
			<control type="group">
				<visible>Container.OnPrevious</visible>
				<animation effect="slide" end="-45,0" time="250" reversible="false">Hidden</animation>
				<control type="group">
					<posx>450</posx>
					<visible>Container.OnPrevious</visible>
					<animation effect="rotatey" center="350" start="0" end="65" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
					<animation effect="rotatey" center="350" start="-65" end="-65" time="0" condition="true">Conditional</animation>
					<control type="group">
						<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>					
						<control type="image">
							<include>MusicShowcaseThumb</include>
							<info>Container(57).ListItem(0).Thumb</info>
						</control>
						<include>genre_Showcase_0</include>
						<control type="image">
							<description>Glass overlay</description>
							<include>MusicShowcaseGlassOverlayAngled</include>
						</control>
						<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>							
						<control type="image">
							<include>MusicShowcaseThumbReflection</include>
							<info>Container(57).ListItem(0).Thumb</info>
						</control>
						<include>genre_Showcase_ref_0</include>
					</control>
				</control>
				<control type="group">
					<posx>505</posx>
					<visible>Container.OnPrevious</visible>
					<animation effect="rotatey" center="875" start="0" end="65" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
					<control type="group">
						<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>					
						<control type="image">
							<include>MusicShowcaseThumb</include>
							<info>Container(57).ListItem(1).Thumb</info>
						</control>
						<include>genre_Showcase_1</include>
						<control type="image">
							<description>Glass overlay</description>
							<include>MusicShowcaseGlassOverlayAngled</include>
						</control>
						<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>								
						<control type="image">
							<include>MusicShowcaseThumbReflection</include>
							<info>Container(57).ListItem(1).Thumb</info>
						</control>
						<include>genre_Showcase_ref_1</include>
					</control>
				</control>
			</control>
		</control>
		<control type="button" id="970">
			<texture>-</texture>
			<visible>![Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]</visible>
			<animation effect="fade" start="100" end="0" time="800">Hidden</animation>
		</control>
		<control type="group" id="7000">
			<posy>387</posy>
			<camera x="640" y="540" />
			<animation effect="fade" time="500">WindowOpen</animation>
			<animation effect="fade" time="200">WindowClose</animation>
			<visible>Control.IsVisible(57) + !Control.IsVisible(7001) + !Control.IsVisible(7002) + [Control.IsVisible(970) + !Container.Content(episodes)]</visible>
			<control type="group">
				<posx>50</posx>
				<animation effect="rotatey" center="-50" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="-50" start="0" end="65" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="-795" time="800" tween="cubic" easing="inout" />
				</animation>				
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-5).Thumb</info>
					</control>
					<include>genre_Showcase_-5</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-5).Thumb</info>
					</control>
					<include>genre_Showcase_ref_5</include>
				</control>
			</control>
			<control type="group">
				<posx>150</posx>
				<animation effect="rotatey" center="50" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="50" start="0" end="65" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="-645" time="800" tween="cubic" easing="inout" />
				</animation>				
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-4).Thumb</info>
					</control>
					<include>genre_Showcase_-4</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-4).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-4</include>
				</control>
			</control>
			<control type="group">
				<posx>250</posx>
				<animation effect="rotatey" center="150" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="150" start="0" end="65" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="-495" time="800" tween="cubic" easing="inout" />
				</animation>				
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-3).Thumb</info>
					</control>
					<include>genre_Showcase_-3</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-3).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-3</include>
				</control>
			</control>
			<control type="group">
				<posx>350</posx>
				<animation effect="rotatey" center="250" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="250" start="0" end="65" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="-345" time="800" tween="cubic" easing="inout" />
				</animation>	
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-2).Thumb</info>
					</control>
					<include>genre_Showcase_-2</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-2).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-2</include>
				</control>
			</control>
			<control type="group">
				<posx>450</posx>
				<animation effect="rotatey" center="350" start="-65" end="-65" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="350" start="0" end="65" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="-195" time="800" tween="cubic" easing="inout" />
				</animation>	
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(-1).Thumb</info>
					</control>
					<include>genre_Showcase_-1</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(-1).Thumb</info>
					</control>
					<include>genre_Showcase_ref_-1</include>
				</control>
			</control>
			<control type="group">
				<posx>960</posx>
				<animation effect="rotatey" center="1330" start="65" end="65" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="1330" start="0" end="-65" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="795" time="800" tween="cubic" easing="inout" />
				</animation>				
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(5).Thumb</info>
					</control>
					<include>genre_Showcase_5</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(5).Thumb</info>
					</control>
					<include>genre_Showcase_ref_5</include>
				</control>
			</control>
			<control type="group">
				<posx>860</posx>
				<animation effect="rotatey" center="1230" start="65" end="65" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="1230" start="0" end="-65" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="645" time="800" tween="cubic" easing="inout" />
				</animation>				
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(4).Thumb</info>
					</control>
					<include>genre_Showcase_4</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(4).Thumb</info>
					</control>
					<include>genre_Showcase_ref_4</include>
				</control>
			</control>
			<control type="group">
				<posx>760</posx>
				<animation effect="rotatey" center="1130" start="65" end="65" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="1130" start="0" end="-65" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="495" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(3).Thumb</info>
					</control>
					<include>genre_Showcase_3</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(3).Thumb</info>
					</control>
					<include>genre_Showcase_ref_3</include>
				</control>
			</control>
			<control type="group">
				<posx>660</posx>
				<animation effect="rotatey" center="1030" start="65" end="65" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="1030" start="0" end="-65" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="345" time="800" tween="cubic" easing="inout" />
				</animation>				
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(2).Thumb</info>
					</control>
					<include>genre_Showcase_2</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>						
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(2).Thumb</info>
					</control>
					<include>genre_Showcase_ref_2</include>
				</control>
			</control>
			<control type="group">
				<posx>560</posx>
				<animation effect="rotatey" center="930" start="65" end="65" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="930" start="0" end="-65" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="195" time="800" tween="cubic" easing="inout" />
				</animation>	
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(1).Thumb</info>
					</control>
					<include>genre_Showcase_1</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(1).Thumb</info>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>	
					<include>genre_Showcase_ref_1</include>					
				</control>
			</control>
			<control type="group">
				<posx>505</posx>
				<control type="group">
					<include condition="Window.IsActive(2)">MusicShowcaseBlack</include>				
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>Container(57).ListItem(0).Thumb</info>
					</control>
					<include>genre_Showcase_0</include>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlayMain</include>
					</control>
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>Container(57).ListItem(0).Thumb</info>
					</control>
					<include condition="Window.IsActive(2)">MusicShowcaseBlackReflection</include>
					<include>genre_Showcase_ref_0</include>
				</control>
			</control>
		</control>
	</include>


	<include name="ShowcaseMovies">
		<control type="group" id="6001">
			<posy>380</posy>
			<camera x="640" y="540" />
			<visible>Control.IsVisible(57) + Container.OnNext + !Skin.HasSetting(flattenshowcase)</visible>
			<animation effect="slide" end="-90,0" time="250" reversible="false">Hidden</animation>
			<control type="group">
				<posx>10</posx>
				<visible>Container.OnNext</visible>
				<animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
				<animation effect="rotatey" center="-90" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9) | stringcompare(Container.NumItems,10) | stringcompare(Container.NumItems,11) | stringcompare(Container.NumItems,12) | stringcompare(Container.NumItems,13) | stringcompare(Container.NumItems,14)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-7).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-7).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-7).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-7).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>100</posx>
				<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9) | stringcompare(Container.NumItems,10) | stringcompare(Container.NumItems,11) | stringcompare(Container.NumItems,12)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-6).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-6).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-6).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-6).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>190</posx>
				<animation effect="rotatey" center="90" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9) | stringcompare(Container.NumItems,10)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-5).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-5).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-5).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-5).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>280</posx>
				<animation effect="rotatey" center="180" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-4).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-4).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-4).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-4).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>370</posx>
				<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-3).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-3).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-3).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-3).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>460</posx>
				<animation effect="rotatey" center="360" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-2).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-2).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-2).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-2).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>1090</posx>
				<visible>!Container.OnNext</visible>
				<animation effect="fade" start="0" end="100" delay="0" time="250" reversible="false">Visible</animation>
				<animation effect="rotatey" center="1470" start="55" end="55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9) | stringcompare(Container.NumItems,10) | stringcompare(Container.NumItems,11)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(6).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(6).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(6).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(6).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>1000</posx>
				<animation effect="rotatey" center="1380" start="55" end="55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(5).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(5).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(5).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(5).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>910</posx>
				<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(4).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(4).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(4).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(4).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>820</posx>
				<animation effect="rotatey" center="1200" start="55" end="55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(3).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(3).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(3).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(3).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>730</posx>
				<animation effect="rotatey" center="1110" start="55" end="55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(2).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(2).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(2).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(2).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>640</posx>
				<animation effect="rotatey" center="1020" start="55" end="55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(1).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(1).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(1).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(1).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<visible>Container.OnNext</visible>
				<animation effect="slide" end="50,0" time="250" reversible="false">Hidden</animation>
				<control type="group">
					<posx>550</posx>
					<visible>Container.OnNext</visible>
					<animation effect="rotatey" center="930" start="0" end="-55" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
					<animation effect="rotatey" center="930" start="55" end="55" time="0" condition="true">Conditional</animation>
					<control type="group">
						<control type="image">
							<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
							<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
							<info>Container(57).ListItem(0).Thumb</info>
						</control>
						<control type="image">
							<include>ShowcaseMoviesGenreThumb</include>
							<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(0).Label].jpg</texture>
						</control>
						<control type="image">
							<description>Glass overlay</description>
							<include>ShowcaseMovieGlassOverlayAngled</include>
						</control>
						<control type="image">
							<include>ShowcaseMovieThumbReflection</include>
							<info>Container(57).ListItem(0).Thumb</info>
						</control>
						<control type="image">
							<include>ShowcaseMoviesGenreThumbReflection</include>
							<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(0).Label].jpg</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<posx>505</posx>
					<visible>Container.OnNext</visible>
					<animation effect="rotatey" center="405" start="0" end="-55" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
					<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2)]]</visible>
						<control type="image">
							<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
							<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
							<info>Container(57).ListItem(-1).Thumb</info>
						</control>
						<control type="image">
							<include>ShowcaseMoviesGenreThumb</include>
							<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-1).Label].jpg</texture>
						</control>
						<control type="image">
							<description>Glass overlay</description>
							<include>ShowcaseMovieGlassOverlayAngled</include>
						</control>
						<control type="image">
							<include>ShowcaseMovieThumbReflection</include>
							<info>Container(57).ListItem(-1).Thumb</info>
						</control>
						<control type="image">
							<include>ShowcaseMoviesGenreThumbReflection</include>
							<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-1).Label].jpg</texture>
						</control>
					</control>
				</control>
			</control>
		</control>
		<control type="group" id="6002">
			<posy>380</posy>
			<camera x="640" y="540" />
			<visible>Control.IsVisible(57) + Container.OnPrevious + !Skin.HasSetting(flattenshowcase)</visible>
			<animation effect="slide" end="90,0" time="250" reversible="false">Hidden</animation>
			<control type="group">
				<posx>1000</posx>
				<visible>Container.OnPrevious</visible>
				<animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
				<animation effect="rotatey" center="1380" start="55" end="55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9) | stringcompare(Container.NumItems,10) | stringcompare(Container.NumItems,11) | stringcompare(Container.NumItems,12) | stringcompare(Container.NumItems,13)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(7).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(7).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(7).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(7).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>910</posx>
				<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9) | stringcompare(Container.NumItems,10) | stringcompare(Container.NumItems,11)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(6).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(6).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(6).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(6).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>820</posx>
				<animation effect="rotatey" center="1200" start="55" end="55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(5).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(5).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(5).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(5).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>730</posx>
				<animation effect="rotatey" center="1110" start="55" end="55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(4).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(4).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(4).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(4).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>640</posx>
				<animation effect="rotatey" center="1020" start="55" end="55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(3).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(3).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(3).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(3).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>550</posx>
				<animation effect="rotatey" center="930" start="55" end="55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(2).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(2).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(2).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(2).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>-80</posx>
				<visible>!Container.OnPrevious</visible>
				<animation effect="fade" start="0" end="100" time="250" reversible="false">Visible</animation>
				<animation effect="rotatey" center="-180" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9) | stringcompare(Container.NumItems,10) | stringcompare(Container.NumItems,11) | stringcompare(Container.NumItems,12)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-6).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-6).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-6).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-6).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>10</posx>
				<animation effect="rotatey" center="-90" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9) | stringcompare(Container.NumItems,10)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-5).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-5).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-5).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-5).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>100</posx>
				<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-4).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-4).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-4).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-4).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>190</posx>
				<animation effect="rotatey" center="90" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-3).Thumb</info>
						<visible>![Container.Content(seasons) | Container.Content(episodes) | Skin.HasSetting(alternativerender)]</visible>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-3).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-3).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-3).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>280</posx>
				<animation effect="rotatey" center="180" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-2).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-2).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-2).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-2).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>370</posx>
				<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-1).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-1).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-1).Thumb</info>
					</control>
<include>genre_Showcase_ref_-1</include>
				</control>
			</control>
			<control type="group">
				<visible>Container.OnPrevious</visible>
				<animation effect="slide" end="-50,0" time="250" reversible="false">Hidden</animation>
				<control type="group">
					<posx>460</posx>
					<visible>Container.OnPrevious</visible>
					<animation effect="rotatey" center="360" start="0" end="55" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
					<animation effect="rotatey" center="360" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<control type="group">
						<control type="image">
							<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
							<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
							<info>Container(57).ListItem(0).Thumb</info>
						</control>
						<control type="image">
							<include>ShowcaseMoviesGenreThumb</include>
							<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(0).Label].jpg</texture>
						</control>
						<control type="image">
							<description>Glass overlay</description>
							<include>ShowcaseMovieGlassOverlay</include>
						</control>
						<control type="image">
							<include>ShowcaseMovieThumbReflection</include>
							<info>Container(57).ListItem(0).Thumb</info>
						</control>
						<control type="image">
							<include>ShowcaseMoviesGenreThumbReflection</include>
							<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(0).Label].jpg</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<posx>505</posx>
					<visible>Container.OnPrevious</visible>
					<animation effect="rotatey" center="885" start="0" end="55" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
					<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0)]]</visible>
						<control type="image">
							<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
							<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
							<info>Container(57).ListItem(1).Thumb</info>
						</control>
						<control type="image">
							<include>ShowcaseMoviesGenreThumb</include>
							<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(1).Label].jpg</texture>
						</control>
						<control type="image">
							<description>Glass overlay</description>
							<include>ShowcaseMovieGlassOverlay</include>
						</control>
						<control type="image">
							<include>ShowcaseMovieThumbReflection</include>
							<info>Container(57).ListItem(1).Thumb</info>
						</control>
						<control type="image">
							<include>ShowcaseMoviesGenreThumbReflection</include>
							<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(1).Label].jpg</texture>
						</control>
					</control>
				</control>
			</control>
		</control>
		<control type="button" id="960">
			<texture>-</texture>
			<visible>!Skin.HasSetting(flattenshowcase)</visible>
			<animation effect="fade" start="100" end="0" time="800">Hidden</animation>
		</control>
		<control type="group" id="6000">
			<posy>380</posy>
			<animation effect="fade" time="500">WindowOpen</animation>
			<animation effect="fade" time="200">WindowClose</animation>
			<visible>Control.IsVisible(57) + !Control.IsVisible(6001) + !Control.IsVisible(6002) + Control.IsVisible(960)</visible>
			<camera x="640" y="540" />
			<control type="group">
				<posx>10</posx>
				<animation effect="rotatey" center="-90" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="-90" start="0" end="55" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="-685" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9) | stringcompare(Container.NumItems,10) | stringcompare(Container.NumItems,11) | stringcompare(Container.NumItems,12)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-6).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-6).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-6).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-6).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>100</posx>
				<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="0" start="0" end="55" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="-577" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9) | stringcompare(Container.NumItems,10)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-5).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-5).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-5).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-5).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>190</posx>
				<animation effect="rotatey" center="90" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="90" start="0" end="55" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="-469" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-4).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-4).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-4).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-4).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>280</posx>
				<animation effect="rotatey" center="180" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="180" start="0" end="55" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="-362" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-3).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-3).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-3).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-3).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>370</posx>
				<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="270" start="0" end="55" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="-256" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-2).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-2).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-2).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-2).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>460</posx>
				<animation effect="rotatey" center="360" start="-55" end="-55" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="360" start="0" end="55" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="-151" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(-1).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(-1).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(-1).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(-1).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>1000</posx>
				<animation effect="rotatey" center="1380" start="55" end="55" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="1380" start="0" end="-55" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="685" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9) | stringcompare(Container.NumItems,10) | stringcompare(Container.NumItems,11)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(6).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(6).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(6).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(6).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>910</posx>
				<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="1290" start="0" end="-55" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="577" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7) | stringcompare(Container.NumItems,8) | stringcompare(Container.NumItems,9)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(5).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(5).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(5).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(5).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>820</posx>
				<animation effect="rotatey" center="1200" start="55" end="55" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="1200" start="0" end="-55" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="469" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5) | stringcompare(Container.NumItems,6) | stringcompare(Container.NumItems,7)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(4).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(4).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(4).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(4).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>730</posx>
				<animation effect="rotatey" center="1110" start="55" end="55" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="1110" start="0" end="-55" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="362" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3) | stringcompare(Container.NumItems,4) | stringcompare(Container.NumItems,5)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(3).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(3).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(3).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(3).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>640</posx>
				<animation effect="rotatey" center="1020" start="55" end="55" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="1020" start="0" end="-55" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="256" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1) | stringcompare(Container.NumItems,2) | stringcompare(Container.NumItems,3)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(2).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(2).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(2).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(2).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>550</posx>
				<animation effect="rotatey" center="930" start="55" end="55" time="0" condition="true">Conditional</animation>
				<animation type="Conditional" condition="Skin.HasSetting(flattenshowcase)">
					<effect type="rotatey" center="930" start="0" end="-55" time="800" tween="cubic" easing="inout" />
					<effect type="slide" start="0" end="151" time="800" tween="cubic" easing="inout" />
				</animation>
				<control type="group">
					<visible>!Skin.HasSetting(dynamicflowmovie) | [Skin.HasSetting(dynamicflowmovie) + ![stringcompare(Container.NumItems,0) | stringcompare(Container.NumItems,1)]]</visible>
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(1).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(1).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlayAngled</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(1).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(1).Label].jpg</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>505</posx>
				<control type="group">
					<control type="image">
						<include condition="!Skin.HasSetting(videogenres)">ShowcaseMovieThumb</include>
						<include condition="Skin.HasSetting(videogenres)">ShowcaseGenreDefaultThumb</include>
						<info>Container(57).ListItem(0).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture background="true" diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem(0).Label].jpg</texture>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>ShowcaseMovieGlassOverlay</include>
					</control>
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>Container(57).ListItem(0).Thumb</info>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="multiplex/multiplex_maskreflect.png">moviegenre/$INFO[ListItem(0).Label].jpg</texture>
					</control>
				</control>
			</control>
		</control>
	</include>
	
	<include name="Viewtype_Showcase">
		<control type="group">
			<include>Furniture_vignette</include>
			<visible>Control.IsVisible(57)</visible>
			<include>Animation_HideMultiplex</include>
		</control>
		<control type="group">
			<include condition="Window.IsActive(1) | Window.IsActive(24) | Window.IsActive(25) | Window.IsActive(2) | Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502)">Furniture_MediaPanel</include>
			<visible>Control.IsVisible(57)</visible>
			<include>Animation_HideShowcase</include>
		</control>
		
		<control type="group">
			<visible>Window.IsActive(28) | Window.IsActive(24) | [Window.IsActive(25)] | Window.IsActive(1)</visible>
			<include condition="Window.IsActive(1) | Window.IsActive(24) | Window.IsActive(25)">ShowcaseMovies</include>
			<include>Animation_HideShowcase</include>
		</control>
		
		<control type="group">
			<visible>Window.IsActive(20) | Window.IsActive(502) | Window.IsActive(501) | Window.IsActive(500) | Window.IsActive(2)</visible>
			<include condition="Window.IsActive(2) | Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502)">ShowcaseSquare</include>
			<include>Animation_HideShowcase</include>
		</control>
		
		<control type="button" id="85">
			<posx>0</posx>
			<posy>0</posy>
			<width>0</width>
			<height>0</height>
			<texturefocus>-</texturefocus>
			<texturenofocus>-</texturenofocus>
			<onleft>57</onleft>
			<onright>57</onright>
		</control>
		
		<control type="button" id="94">
			<posx>0</posx>
			<posy>0</posy>
			<width>0</width>
			<height>0</height>
			<texturefocus>-</texturefocus>
			<texturenofocus>-</texturenofocus>
			<onleft>57</onleft>
			<onright>320</onright>
			<onup>57</onup>
			<ondown>57</ondown>
		</control>
		
		<control type="button" id="320">
			<texturefocus>-</texturefocus>
			<texturenofocus>-</texturenofocus>
			<onleft>57</onleft>
			<onright>57</onright>
			<onup>57</onup>
			<ondown>321</ondown>
			<visible>Skin.HasSetting(nosettings)</visible>
		</control>

		<control type="button" id="321">
			<texturefocus>-</texturefocus>
			<texturenofocus>-</texturenofocus>
			<onleft>322</onleft>
			<onright>57</onright>
			<onup>57</onup>
			<ondown>57</ondown>
		</control>

		<control type="button" id="322">
			<texturefocus>-</texturefocus>
			<texturenofocus>-</texturenofocus>
			<onleft>57</onleft>
			<onright>57</onright>
			<onup>Skin.Reset(nosettings)</onup>			
			<onup>SetFocus(57)</onup>
			<ondown>57</ondown>
		</control>		
		
		<control type="group">
			<include>ShowcaseVisible</include>
			<control type="wraplist" id="57">
				<include condition="Window.IsActive(28) | Window.IsActive(24) | [Window.IsActive(25) + !Container.Content(episodes)] | Window.IsActive(1)">ShowcaseMovieGroupVars</include>
				<include condition="Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Window.IsActive(2) | Window.IsActive(20)">MusicShowcaseGroupVars</include>
				<onleft>57</onleft>
				<onright>57</onright>
				<onup>900</onup>
				<ondown>60</ondown>
				<viewtype label="Showcase">list</viewtype>
				<pagecontrol>60</pagecontrol>
				<orientation>horizontal</orientation>
				<scrolltime>250</scrolltime>
				<include>Animation_HideShowcase</include>
				<focusposition>3</focusposition>
				<itemlayout height="350" width="196" condition="Window.IsActive(28) | Window.IsActive(24) | [Window.IsActive(25) + !Container.Content(episodes)] | Window.IsActive(1)">
					<control type="image">
						<include>ShowcaseMovieThumb</include>
						<info>ListItem.Icon</info>
						<visible>!Container.Content(genres) + Skin.HasSetting(flattenShowcase) + !Control.IsVisible(6000)</visible>
					</control>
					<control type="image">
						<include>ShowcaseGenreDefaultThumb</include>
						<visible>Skin.HasSetting(flattenShowcase) + !Control.IsVisible(6000) + Container.Content(genres)</visible>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem.Label].jpg</texture>
						<visible>Skin.HasSetting(flattenShowcase) + !Control.IsVisible(6000) + Container.Content(genres)</visible>
					</control>
					<control type="image">
						<include>ShowcaseMovieGlassOverlay</include>
						<visible>Skin.HasSetting(flattenShowcase) + !Control.IsVisible(6000)</visible>
					</control>				
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>ListItem.Icon</info>
						<visible>!Container.Content(genres) + Skin.HasSetting(flattenShowcase) + !Control.IsVisible(6000)</visible>
					</control>				
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="thumbs/movieposter_mask_reflect.png">moviegenre/$INFO[ListItem.Label].jpg</texture>
						<visible>Skin.HasSetting(flattenShowcase) + !Control.IsVisible(5050) + Container.Content(genres)</visible>
					</control>
					<control type="image">
						<posx>180</posx>
						<posy>10</posy>
						<width>35</width>
						<height>35</height>
						<info>ListItem.Overlay</info>
						<visible>Skin.HasSetting(flattenShowcase) + !Control.IsVisible(6000) + !Skin.HasSetting(nooverlays) + !IsEmpty(ListItem.Overlay)</visible>
					</control>				
				</itemlayout>
				<focusedlayout height="350" width="196" condition="Window.IsActive(28) | Window.IsActive(24) | [Window.IsActive(25) + !Container.Content(episodes)] | Window.IsActive(1)">
					<control type="image">
						<include>ShowcaseMovieThumb</include>
						<info>ListItem.Icon</info>
						<include>Animation_ShowcaseFocusZoom</include>
						<visible>!Container.Content(genres) + Skin.HasSetting(flattenShowcase) + !Control.IsVisible(6000)</visible>
					</control>
					<control type="image">
						<include>ShowcaseGenreDefaultThumb</include>
						<include>Animation_ShowcaseFocusZoom</include>
						<visible>Skin.HasSetting(flattenShowcase) + !Control.IsVisible(6000) + Container.Content(genres)</visible>
					</control>
					<control type="image">
						<include>ShowcaseMoviesGenreThumb</include>
						<texture diffuse="thumbs/movieposter_mask.png">moviegenre/$INFO[ListItem.Label].jpg</texture>
						<include>Animation_ShowcaseFocusZoom</include>
						<visible>Skin.HasSetting(flattenShowcase) + !Control.IsVisible(6000) + Container.Content(genres)</visible>
					</control>
					<control type="image">
						<include>ShowcaseMovieGlassOverlay</include>
						<include>Animation_ShowcaseFocusZoom</include>
						<visible>Skin.HasSetting(flattenShowcase) + !Control.IsVisible(6000)</visible>
					</control>				
					<control type="image">
						<include>ShowcaseMovieThumbReflection</include>
						<info>ListItem.Icon</info>
						<include>Animation_ShowcaseFocusZoom</include>
						<visible>!Container.Content(genres) + Skin.HasSetting(flattenShowcase) + !Control.IsVisible(6000)</visible>
					</control>				
					<control type="image">
						<include>ShowcaseMoviesGenreThumbReflection</include>
						<texture flipy="true" diffuse="thumbs/movieposter_mask_reflect.png">moviegenre/$INFO[ListItem.Label].jpg</texture>
						<include>Animation_ShowcaseFocusZoom</include>
						<visible>Skin.HasSetting(flattenShowcase) + !Control.IsVisible(5050) + Container.Content(genres)</visible>
					</control>
					<control type="image">
						<posx>180</posx>
						<posy>10</posy>
						<width>35</width>
						<height>35</height>
						<info>ListItem.Overlay</info>
						<include>Animation_ShowcaseFocusZoom</include>
						<visible>Skin.HasSetting(flattenShowcase) + !Control.IsVisible(6000) + !Skin.HasSetting(nooverlays) + !IsEmpty(ListItem.Overlay)</visible>
					</control>				
				</focusedlayout>
				<itemlayout height="350" width="250" condition="Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Window.IsActive(2) | Window.IsActive(20)">
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>ListItem.Icon</info>
						<visible>!Container.Content(genres) + [[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlay</include>
						<visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
					</control>
					<control type="image">
						<description>Black overlay</description>
						<include>MusicShowcaseOverlay</include>
						<visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
					</control>
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>ListItem.Icon</info>
						<visible>!Container.Content(genres) + [[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
					</control>				
					<control type="image">
						<include>ShowcaseMusicGenreThumbReflection</include>
						<texture flipy="true" diffuse="thumbs/movieposter_mask_reflect.png">musicgenre/$INFO[ListItem.Label].jpg</texture>
						<include>Animation_ShowcaseFocusZoom</include>
						<visible>Skin.HasSetting(flattenShowcase) + !Control.IsVisible(970) + Container.Content(genres)</visible>
					</control>
				</itemlayout>
				<focusedlayout height="350" width="250" condition="Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502) | Window.IsActive(2) | Window.IsActive(20)">
					<control type="image">
						<include>MusicShowcaseThumb</include>
						<info>ListItem.Icon</info>
						<visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
						<animation effect="zoom" start="100" end="110" center="135,230" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
						<animation effect="zoom" start="110" end="100" center="135,230" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]">Unfocus</animation>						
					</control>
					<control type="image">
						<description>Glass overlay</description>
						<include>MusicShowcaseGlassOverlay</include>
						<visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
						<animation effect="zoom" start="100" end="110" center="135,230" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
						<animation effect="zoom" start="110" end="100" center="135,230" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]">Unfocus</animation>						
					</control>
					<control type="image">
						<description>Black overlay</description>
						<include>MusicShowcaseOverlay</include>
						<visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
						<animation effect="zoom" start="100" end="110" center="135,230" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
						<animation effect="zoom" start="110" end="100" center="135,230" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]">Unfocus</animation>						
					</control>
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>ListItem.Icon</info>
						<visible>[[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
						<animation effect="zoom" start="100" end="110" center="135,230" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
						<animation effect="zoom" start="110" end="100" center="135,230" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]">Unfocus</animation>						
					</control>					
					<control type="image">
						<include>MusicShowcaseThumbReflection</include>
						<info>ListItem.Icon</info>
						<visible>!Container.Content(genres) + [[Skin.HasSetting(flattenshowcase) + !Control.IsVisible(970)] | Container.Content(episodes)]</visible>
						<animation effect="zoom" start="100" end="110" center="135,230" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
						<animation effect="zoom" start="110" end="100" center="135,230" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [Skin.HasSetting(flattenshowcase) | Container.Content(episodes)]">Unfocus</animation>						
					</control>				
				</focusedlayout>				
			</control>
			
			<control type="scrollbar" id="60">
				<description>My first scroll bar control</description>
				<posx>305</posx>
				<posy>663</posy>
				<width>670</width>
				<height>41</height>
				<visible allowhiddenfocus="true">Control.IsVisible(57) + Control.HasFocus(60)</visible>
				<texturesliderbackground>windows/scrollbarbackshowcase.png</texturesliderbackground>
				<texturesliderbar>-</texturesliderbar>
				<texturesliderbarfocus>-</texturesliderbarfocus>
				<textureslidernib>windows/scrollbarnub-nofocus.png</textureslidernib>
				<textureslidernibfocus>windows/scrollbarnub-focus.png</textureslidernibfocus>
				<pulseonselect></pulseonselect>
				<orientation>horizontal</orientation>
				<showonepage>false</showonepage>
				<onup>57</onup>
				<ondown>94</ondown>
				<onleft>60</onleft>
				<onright>60</onright>
				<include>Animation_HideShowcase</include>
				<include>Animation_CommonFade</include>
			</control>
			
			<control type="group">
				<visible>Control.IsVisible(57)</visible>
				<include>Animation_HideShowcase</include>
				<control type="fadelabel">
					<label>31609</label>
					<label>31610</label>					
					<scrollout>false</scrollout>
					<pauseatend>3000</pauseatend>
					<scroll>false</scroll>
					<include>ShowcaseMainLabel</include>
					<visible>Window.IsActive(25) + Control.IsVisible(57) + stringcompare(container(57).numitems,0)</visible>
				</control>
				<control type="fadelabel">
					<label>31609</label>
					<label>31611</label>					
					<scrollout>false</scrollout>
					<pauseatend>3000</pauseatend>
					<scroll>false</scroll>
					<include>ShowcaseMainLabel</include>
					<visible>Window.IsActive(502) + Control.IsVisible(57) + stringcompare(container(57).numitems,0)</visible>
				</control>				
				<control type="label">
					<label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
					<include>ShowcaseMainLabel</include>
					<visible>Container.Content(movies) + !Skin.HasSetting(nomediaflags) + !Window.IsActive(24)</visible>
				</control>
				<control type="label">
					<label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
					<include>ShowcaseMainLabelWide</include>
					<visible>[!Container.Content(movies) | Window.IsActive(24)] | [Container.Content(movies) + Skin.HasSetting(nomediaflags)]</visible>					
				</control>
				<control type="label" id="72">
					<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
					<include>ShowcaseDetailLabel</include>
					<visible>Container.Content(movies) + !IsEmpty(ListItem.Genre)</visible>
				</control>
				<control type="label" id="72">
					<label>[UPPERCASE]$INFO[ListItem.Episode] $LOCALIZE[31406][/UPPERCASE]</label>
					<include>ShowcaseDetailLabel</include>
					<visible>[Container.Content(tvshows)] + !IsEmpty(ListItem.Episode)</visible>
				</control>
				<control type="label">
					<label>[UPPERCASE]$INFO[ListItem.TVShowTitle][/UPPERCASE]</label>
					<include>ShowcaseDetailLabel</include>
					<visible>Container.Content(seasons)</visible>
				</control>
				<control type="label" id="72">
					<label>[UPPERCASE]$LOCALIZE[31432] $INFO[ListItem.Season], $LOCALIZE[31433] $INFO[ListItem.Episode][/UPPERCASE]</label>
					<include>ShowcaseDetailLabel</include>
					<visible>Container.Content(episodes) + !IsEmpty(ListItem.Episode)</visible>
				</control>

				<control type="label" id="72">
					<label>$INFO[ListItem.Album,, -] $INFO[ListItem.Artist]</label>
					<include>ShowcaseDetailLabel</include>
					<visible>Container.Content(songs)</visible>
				</control>
				<control type="label" id="72">
					<info>ListItem.Label2</info>
					<include>ShowcaseDetailLabel</include>
					<visible>Window.IsActive(1) | Container.Content(albums) | Window.IsActive(501)</visible>
				</control>

				<control type="label" id="72">
					<info>ListItem.PictureResolution</info>
					<include>ShowcaseDetailLabel</include>
					<visible>Window.IsActive(2) + !IsEmpty(ListItem.PictureResolution)</visible>
				</control>

				<control type="label">
					<label>[UPPERCASE]$INFO[Container.NumItems] $LOCALIZE[31005][/UPPERCASE]</label>
					<include>ShowcaseItemsLabel</include>
				</control>				

			</control>
		</control>
		
		<control type="group">
			<include>ShowcaseVisible</include>
		</control>
		
	</include>
</includes>
